After swig upgrade from 3.0.2 to 3.0.6,build the recipes which
depends on python-m2crypto will occur errors like this:
SALT_LEN = m2.PKCS5_SALT_LEN
AttributeError: 'module' object has no attribute 'PKCS5_SALT_LEN'
since python-m2crypto depends on swig-native

Ref:
https://github.com/martinpaljak/M2Crypto/issues/60#issuecomment-75735489

This patch is from:
http://pkgs.fedoraproject.org/cgit/m2crypto.git/tree/m2crypto-0.21.1-swig-3.0.5.patch

Upstream-Status: merged to python-m2crypto v0.22.4

Signed-off-by: Li Xin <lixin.fnst@cn.fujitsu.com>
diff -Naurp M2Crypto-0.22.3_org/M2Crypto/__init__.py M2Crypto-0.22.3/M2Crypto/__init__.py
--- M2Crypto-0.22.3_org/M2Crypto/__init__.py	2015-12-23 18:58:53.418775835 -0800
+++ M2Crypto-0.22.3/M2Crypto/__init__.py	2015-12-23 19:15:43.804682568 -0800
@@ -19,7 +19,7 @@ Copyright 2008-2011 Heikki Toivonen. All
 version_info = (0, 22)
 version = '.'.join([str(_v) for _v in version_info])
 
-import __m2crypto
+import _m2crypto
 import m2
 import ASN1
 import AuthCookie
@@ -47,4 +47,4 @@ import m2xmlrpclib
 import threading
 import util
 
-__m2crypto.lib_init()
+_m2crypto.lib_init()
diff -Naurp M2Crypto-0.22.3_org/M2Crypto/m2.py M2Crypto-0.22.3/M2Crypto/m2.py
--- M2Crypto-0.22.3_org/M2Crypto/m2.py	2015-12-23 18:58:53.418775835 -0800
+++ M2Crypto-0.22.3/M2Crypto/m2.py	2015-12-23 19:16:16.765679526 -0800
@@ -25,7 +25,7 @@ Portions created by Open Source Applicat
 Copyright (C) 2004 OSAF. All Rights Reserved.
 """
 
-from __m2crypto import *
+from _m2crypto import *
 lib_init()
 
 
diff -Naurp M2Crypto-0.22.3_org/setup.py M2Crypto-0.22.3/setup.py
--- M2Crypto-0.22.3_org/setup.py	2015-12-23 18:58:53.419775835 -0800
+++ M2Crypto-0.22.3/setup.py	2015-12-23 20:04:01.446415092 -0800
@@ -18,6 +18,7 @@ from setuptools import setup
 from setuptools.command import build_ext
 
 from distutils.core import Extension
+from distutils.file_util import copy_file
 from distutils.spawn import find_executable
 
 
@@ -77,6 +78,15 @@ class _M2CryptoBuildExt(build_ext.build_
                           [opensslIncludeDir, os.path.join(opensslIncludeDir, "openssl")]]
         self.swig_opts.append('-includeall')
         self.swig_opts.append('-modern')
+        self.swig_opts.append('-builtin')
+
+        # These two lines are a workaround for
+        # http://bugs.python.org/issue2624 , hard-coding that we are only
+        # building a single extension with a known path; a proper patch to
+        # distutils would be in the run phase, when extension name and path are
+        # known.
+        self.swig_opts.append('-outdir')
+        self.swig_opts.append(os.path.join(self.build_lib, 'M2Crypto'))
 
         # Fedora does hat tricks.
         if platform.linux_distribution()[0] in ['Fedora', 'CentOS']:
@@ -98,6 +108,20 @@ class _M2CryptoBuildExt(build_ext.build_
 
         self.library_dirs += [os.path.join(self.openssl, opensslLibraryDir)]
 
+    def run(self):
+        '''Overloaded build_ext implementation to allow inplace=1 to work,
+        which is needed for (python setup.py test).'''
+        # This is another workaround for http://bugs.python.org/issue2624 + the
+        # corresponding lack of support in setuptools' test command. Note that
+        # just using self.inplace in finalize_options() above does not work
+        # because swig is not rerun if the __m2crypto.so extension exists.
+        # Again, hard-coding our extension name and location.
+        build_ext.build_ext.run(self)
+        if self.inplace:
+            copy_file(os.path.join(self.build_lib, 'M2Crypto', '_m2crypto.py'),
+                      os.path.join('M2Crypto', '_m2crypto.py'),
+                      verbose=self.verbose, dry_run=self.dry_run)
+
 if sys.platform == 'darwin':
    my_extra_compile_args = ["-Wno-deprecated-declarations"]
 else:
diff -Naurp M2Crypto-0.22.3_org/SWIG/_lib.i M2Crypto-0.22.3/SWIG/_lib.i
--- M2Crypto-0.22.3_org/SWIG/_lib.i	2015-12-23 18:58:53.419775835 -0800
+++ M2Crypto-0.22.3/SWIG/_lib.i	2015-12-23 19:17:51.175670811 -0800
@@ -66,6 +66,7 @@ int ssl_verify_callback(int ok, X509_STO
     int cret;
     int new_style_callback = 0, warning_raised_exception=0;
     PyGILState_STATE gilstate;
+    PyObject *self = NULL; /* bug in SWIG_NewPointerObj as of 3.0.5 */
 
     ssl = (SSL *)X509_STORE_CTX_get_app_data(ctx);
 
@@ -151,6 +152,7 @@ int ssl_verify_callback(int ok, X509_STO
 void ssl_info_callback(const SSL *s, int where, int ret) {
     PyObject *argv, *retval, *_SSL;
     PyGILState_STATE gilstate;
+    PyObject *self = NULL; /* bug in SWIG_NewPointerObj as of 3.0.5 */
 
     gilstate = PyGILState_Ensure();
 
@@ -170,6 +172,7 @@ DH *ssl_set_tmp_dh_callback(SSL *ssl, in
     PyObject *argv, *ret, *_ssl;
     DH *dh;
     PyGILState_STATE gilstate;
+    PyObject *self = NULL; /* bug in SWIG_NewPointerObj as of 3.0.5 */
 
     gilstate = PyGILState_Ensure();
 
@@ -193,6 +196,7 @@ RSA *ssl_set_tmp_rsa_callback(SSL *ssl,
     PyObject *argv, *ret, *_ssl;
     RSA *rsa;
     PyGILState_STATE gilstate;
+    PyObject *self = NULL; /* bug in SWIG_NewPointerObj as of 3.0.5 */
 
     gilstate = PyGILState_Ensure();
 
diff -Naurp M2Crypto-0.22.3_org/SWIG/_pkcs7.i M2Crypto-0.22.3/SWIG/_pkcs7.i
--- M2Crypto-0.22.3_org/SWIG/_pkcs7.i	2015-12-23 18:58:53.419775835 -0800
+++ M2Crypto-0.22.3/SWIG/_pkcs7.i	2015-12-23 19:18:52.874665115 -0800
@@ -157,6 +157,7 @@ PyObject *smime_read_pkcs7(BIO *bio) {
     BIO *bcont = NULL;
     PKCS7 *p7;
     PyObject *tuple, *_p7, *_BIO;
+    PyObject *self = NULL; /* bug in SWIG_NewPointerObj as of 3.0.5 */
 
     if (BIO_method_type(bio) == BIO_TYPE_MEM) {
         /* OpenSSL FAQ explains that this is needed for mem BIO to return EOF,
